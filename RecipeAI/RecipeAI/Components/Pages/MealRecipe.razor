@page "/mealRecipe/{index:int}"
@using RecipeAI.Models
@inject RecipeState recipeState
@using RecipeAI.Services
@inject IOpenAIAPI openAIService
@inject NavigationManager navigation
@rendermode InteractiveServer


@code {
    [Parameter] public int index { get; set; }
    private Recipe? recipe;
    private RecipeImage? recipeImage;
    private bool isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        if (index >= 0 && recipeState.Ideas != null && index < recipeState.Ideas.Count)
        {
            var recipeIdea = recipeState.Ideas[index];
            recipe = await openAIService.CreateRecipe(recipeIdea.Title, recipeState.IngredientList);
            recipeImage = await openAIService.CreateRecipeImage(recipe?.Title ?? "");

            isLoading = false;
        }
    }
}

<div class="container mt-5">
    @if (isLoading)
    {
        <h4>Loading recipe details...</h4>
    }
    else if (recipe != null)
    {
        <h3>@recipe.Title</h3>
        <p><b>Summary:</b> @recipe.Summary</p>
        <h4>Ingredients:</h4>
        <ul>
            @foreach (var ingredient in recipe.Ingredients ?? Array.Empty<string>())
            {
                <li>@ingredient</li>
            }
        </ul>
        <h4>Instructions:</h4>
        <ol>
            @foreach (var step in recipe.Instructions ?? Array.Empty<string>())
            {
                <li>@step</li>
            }
        </ol>
        @if (recipeImage?.Data?.FirstOrDefault()?.Url != null)
        {
            <div class="mt-4">
                <img src="@recipeImage.Data.First().Url" alt="@recipe.Title" class="img-fluid" />
            </div>
        }
    }
    else
    {
        <h4>Recipe details could not be loaded. Please try again.</h4>
    }
</div>
