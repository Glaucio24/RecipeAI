@page "/createmeal"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@using RecipeAI.Components.Layout
@using RecipeAI.Models
@inject RecipeState recipeState
@inject NavigationManager navigation
@rendermode InteractiveServer

<TopNavMenu />
<PageTitle>Recipe AI - Create Meal</PageTitle>
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header text-center">
                    <i class="bi bi-magic" aria-hidden="true"></i><h1>Create Meal</h1>
                </div>
                <div class="card-body">
                    <EditForm EditContext="@editcontext">
                        <div class="mb-3 row">
                            <label class="col-sm-3 col-form-label">Meal Time</label>
                            <div class="col-sm-9">
                                <InputSelect @bind-Value="meal.MealTime" class="form-select">
                                    <option value="Breakfast">Breakfast</option>
                                    <option value="Lunch">Lunch</option>
                                    <option value="Dinner">Dinner</option>
                                    <option value="Dessert">Dessert</option>
                                </InputSelect>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label class="col-sm-3 col-form-label">Ingredient</label>
                            <div class="col-sm-9">
                                <InputText placeholder="Add ingredient" class="form-control" maxlength="30" @bind-Value="meal.Ingredient"></InputText>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <button type="button" class="btn btn-outline-danger" @onclick="AddIngredient">Add</button>
                            <button type="button" class="btn btn-outline-info" @onclick="ClearForm">Clear</button>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Ingredients</th>
                                        <th class="text-end">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in ingredients)
                                    {
                                        <tr>
                                            <td>@item.Description</td>
                                            <td class="text-end">
                                                <button class="btn btn-outline-danger btn-sm" @onclick="() => RemoveIngredient(item.Id)">
                                                    <i class="bi bi-trash-fill"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="text-center mt-3">
                            <button type="button" class="btn btn-success rounded" @onclick="OnSubmit">Generate Recipe</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private RecipeState? rState { get; set; }

    private EditContext? editcontext;
    private List<Ingredient> ingredients = new List<Ingredient>();
    private Meal meal = new();

    protected override void OnInitialized()
    {
        if (recipeState is null)
        {
            navigation.NavigateTo("/", forceLoad: true);
            return;
        }
        editcontext = new(meal);

        meal.MealTime = recipeState.MealTime;
        ingredients = recipeState.Ingredients;
    }

    public class Meal
    {
        public string? MealTime { get; set; }
        public string? Ingredient { get; set; }
    }

    private void AddIngredient()
    {
        if (!string.IsNullOrEmpty(meal.Ingredient))
        {
            ingredients.Add(new Ingredient
                {
                    Id = Guid.NewGuid(),
                    Description = meal.Ingredient
                });
            meal.Ingredient = string.Empty; // Clear ingredient input after adding
        }
    }

    private void ClearForm()
    {
        ingredients.Clear();
    }

    private void RemoveIngredient(Guid id)
    {
        ingredients.Remove(ingredients.First(x => x.Id == id));
    }

    private void OnSubmit()
    {
        recipeState.MealTime = meal.MealTime;
        recipeState.Ingredients = ingredients;
        navigation.NavigateTo("/mealIdeas");
    }
}
